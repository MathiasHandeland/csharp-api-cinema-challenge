// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20250822094812_SeededThreeMovies")]
    partial class SeededThreeMovies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CustomerId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CustomerEmail");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CustomerName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CustomerPhone");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "messi@messi.messi",
                            Name = "Lionel Messi",
                            Phone = "90121413"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ronaldo@ronaldo.ronaldo",
                            Name = "Cristiano Ronaldo",
                            Phone = "90121414"
                        },
                        new
                        {
                            Id = 3,
                            Email = "rooney@rooney.rooney",
                            Name = "Wayne Rooney",
                            Phone = "90121415"
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("MovieId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MovieDescription");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Rating");

                    b.Property<int>("RuntimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("RuntimeMinutes");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MovieTitle");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A thief who steals corporate secrets through dream-sharing technology.",
                            Rating = "PG-13",
                            RuntimeMins = 148,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A computer hacker learns about the true nature of his reality.",
                            Rating = "R",
                            RuntimeMins = 136,
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A team of explorers travel through a wormhole in space.",
                            Rating = "PG-13",
                            RuntimeMins = 169,
                            Title = "Interstellar"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
